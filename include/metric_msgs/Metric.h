// Generated by gencpp from file metric_msgs/Metric.msg
// DO NOT EDIT!


#ifndef METRIC_MSGS_MESSAGE_METRIC_H
#define METRIC_MSGS_MESSAGE_METRIC_H

#include <ros/service_traits.h>


#include <metric_msgs/MetricRequest.h>
#include <metric_msgs/MetricResponse.h>


namespace metric_msgs
{

struct Metric
{

typedef MetricRequest Request;
typedef MetricResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Metric
} // namespace metric_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::metric_msgs::Metric > {
  static const char* value()
  {
    return "c2b94d4ff37f47487251d75339f8e9f9";
  }

  static const char* value(const ::metric_msgs::Metric&) { return value(); }
};

template<>
struct DataType< ::metric_msgs::Metric > {
  static const char* value()
  {
    return "metric_msgs/Metric";
  }

  static const char* value(const ::metric_msgs::Metric&) { return value(); }
};


// service_traits::MD5Sum< ::metric_msgs::MetricRequest> should match 
// service_traits::MD5Sum< ::metric_msgs::Metric > 
template<>
struct MD5Sum< ::metric_msgs::MetricRequest>
{
  static const char* value()
  {
    return MD5Sum< ::metric_msgs::Metric >::value();
  }
  static const char* value(const ::metric_msgs::MetricRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::metric_msgs::MetricRequest> should match 
// service_traits::DataType< ::metric_msgs::Metric > 
template<>
struct DataType< ::metric_msgs::MetricRequest>
{
  static const char* value()
  {
    return DataType< ::metric_msgs::Metric >::value();
  }
  static const char* value(const ::metric_msgs::MetricRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::metric_msgs::MetricResponse> should match 
// service_traits::MD5Sum< ::metric_msgs::Metric > 
template<>
struct MD5Sum< ::metric_msgs::MetricResponse>
{
  static const char* value()
  {
    return MD5Sum< ::metric_msgs::Metric >::value();
  }
  static const char* value(const ::metric_msgs::MetricResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::metric_msgs::MetricResponse> should match 
// service_traits::DataType< ::metric_msgs::Metric > 
template<>
struct DataType< ::metric_msgs::MetricResponse>
{
  static const char* value()
  {
    return DataType< ::metric_msgs::Metric >::value();
  }
  static const char* value(const ::metric_msgs::MetricResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // METRIC_MSGS_MESSAGE_METRIC_H
