#!/bin/bash
#set -x
    usage_result="Usage: runit [-c] [-f procfile|Procfile] [-e envfile|.env]"
    simple_procfile="test/fixtures/simple_procfile"
    simple_envfile="test/fixtures/simple_env_file"
    invalid_procfile="test/fixtures/invalid_procfile"
    invalid_envfile="test/fixtures/invalid_env_file"
PORT=8080
if_veriproc_suc=true;
if_verienv_suc=true;
procfile=""
envfile=""
function usage() {
    :
}
function getArg() {
while [ $# -ne  0 ]
do
case $1 in 
    -c)
       shift;;
    -f)
       if [ $# -gt 1 ]
           then 
           procfile="$2"
       else
           echo "$usage_result"
           exit
       fi
       shift;shift;;
    -e)
       if [ $# -gt 1 ]
           then
           envfile="$2"
       else
           echo "$usage_result"
           exit
       fi
       shift;shift;;
    *)
       if [ "`echo $1|sed -r 's/( |\t)*//g'`" == ""  ]
          then shift;
       else
          echo "$usage_result";exit;
       fi
       ;;
esac
done
}
function verify() {
	:    
}
function verifyProcfile() {
        proc_num=0
        proc_name=();
        proc_cmd=();
	if [ "$procfile" == "" ]
        then
             if [ -f "procfile" ]
             then 
                   procfile="procfile"
             elif [ -f "Procfile" ]
             then  procfile="Procfile"
             else
                 echo "$usage_result";exit;
             fi;
        fi

        rm -f .procfile; cat  "$procfile"| sed 's/$/\n/g' |sed '/^$/d' >> .procfile;
        while read line
        do
             line=`echo $line |sed -r 's/#.*//g'|sed '/^( |\t)*$/d'` 
             if [ "$line" != "" ]
             then 
                 if_config_right=true;
                 procname=`echo $line|awk 'BEGIN{FS=":"}{print $1}'`;
                 proccmd=`echo $line|sed  "s/^$procname//g"|sed -r "s/^://g"`;
    	         #echo "";echo "line is $line"; echo "";
                 #echo "procname is $procname";echo "";
                 #echo "$proccmd"
                 #echo `eval $proccmd`;echo "";
                 #examin the vaild of the procname
    
                 if [ "`echo $procname|sed -r 's/(_|[0-9]|[a-Z])//g'`" != "" ] 
                 then
                       echo "error : $procname is invalid_char"; 
                       if_config_right=false;
                 fi
                 #examin the vaild of the proc cmd 
                 if [ "$proccmd" == "" ]
                 then
                       echo "error: no_colon_command" ; if_config_right=false;
                 fi
                 #verify if the config file is ok  
                 if [ "$if_config_right" != "true" ]
                 then if_veriproc_suc=false; 
                 else

                     proc_name[$proc_num]=$procname
                     proc_cmd[$proc_num]=$proccmd
                     proc_num=`expr $proc_num + 1 `
                 fi
             fi  
        done  < .procfile
             if [ "$if_veriproc_suc" != "true" ]
             then      return 1;
             else
                       if [ "$if_verienv_suc" == "true" ]
                       then
                       for((i=0;i<${#proc_cmd[@]};i++))
                       do
                    
                            `eval echo echo $proc_cmd[$i]`; 
                            echo "proc command is  $proc_cmd[$i]"
                            port_var1=`echo "test if can increase $proc_cmd[$i]" |grep '$PORT'`
                            port_var2=`echo "test if can increase $proc_cmd[$i]" |grep '${PORT}'`
                            if [ "$port_var1" != "" ] || [ "$port_var2" != "" ] 
                            then PORT=`expr $PORT + 1`
                            fi
                       done
                       fi
                       return 0;
             fi
            

}

function verifyEnvfile() {
        if [ "$envfile" == "" ]
        then
             if [ -f ".env" ]
             then
                   envfile=".env"
             else 
                   return 0;
             fi;
        fi
        while read line 
        do
             line=`echo $line |sed -r 's/#.*//g'|sed '/^( |\t)*$/d'`
             if [ "$line" != "" ]
                then
                if_config_right=true;
                envname=`echo $line|awk 'BEGIN{FS="="}{print $1}'`;
                envvalue=`echo $line|sed  "s/^$envname//g"|sed -r "s/^=//g"`;
                #examin the vaild of the procname
                #echo "envname is $envname and envvalue is $envvalue" 
                if [ "`echo $envname|sed -r 's/(_|[0-9]|[a-Z])//g'`" != "" ]
                then
                      echo "invalid_char";
                      if_config_right=false;
                fi
                #examin the vaild of the proc cmd 
                if [ "$envvalue" == "" ]
                then
                      echo "no_equal_mark" ; if_config_right=false;
                elif [ "`echo $envvalue|grep " "`" != "" ]
                then
                      echo "value_have_space";if_config_right=false;
                fi
                #set the environment variable
                if [ "$if_config_right" != "true"  ]
                then  if_verienv_suc=false; 
                      echo "the if_config_right is flase"
                else
                      cmd="export $envname=$envvalue"
                      $cmd
                fi;
             fi
        done < "$envfile"
             if [ "$if_verienv_suc" != "true" ]
             then      return 1;
             else
                       return 0;
             fi

}


function log() {
    :
}

function run_command() {
    :
}

function load_env_file() {
    :
}

function run_procfile() {
    :
}

function main() {
    getArg  "$@"
    verifyEnvfile
    verifyProcfile
    env=`verifyEnvfile`
    proc=`verifyProcfile`
    if  [ "$env" == "0" ] && [ "$proc" ==  "0" ] 
    then 
        return 0
    else
        return 1
    fi
}

main "$@"
#set +x
