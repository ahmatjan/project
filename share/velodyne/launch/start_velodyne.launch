<launch>
    <arg name="velodyne64_calibration_file" default="$(find velodyne_pointcloud)/params/64E_S3_calibration.yaml"/> 
    <arg name="velodyne16_calibration_file" default="$(find velodyne_pointcloud)/params/VLP16_calibration.yaml"/> 
    <arg name="organized" default="false"/>
    <arg name="min_range" default="0.9" />
    <arg name="max_range" default="70.0" />
    <arg name="imu_sync" default="xsens" />
    <arg name="rpm" default="600"/>

  <include file="$(find velodyne_pointcloud)/launch/nodelet_manager.launch">
  </include>
    <!--  HDL64E -->
    <!--  driver nodelets -->
  <include file="$(find velodyne_driver)/launch/driver_nodelet.launch">
    <arg name="model" value="64E_S2"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="node_name" value="sensor_velodyne64_packets"/>
    <arg name="topic" value="/sensor/velodyne64/VelodyneScan"/>    
  </include>
  
  <!-- start cloud nodelet using test calibration file -->
  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
    <arg name="model" default="64E_S2" />
    <arg name="calibration" default="$(arg velodyne64_calibration_file)" />
        <arg name="organized" default="$(arg organized)"/>
        <arg name="min_range" default="$(arg min_range)" />
        <arg name="max_range" default="$(arg max_range)" />
        <arg name="imu_sync" default="$(arg imu_sync)" />
    <arg name="topic_pointcloud" default="/sensor/velodyne64/PointCloud2"/>
    <arg name="topic_packets" default="/sensor/velodyne64/VelodyneScan"/>
    <arg name="node_name" value="sensor_velodyne64_points"/>
  </include>
  
   <!-- start compensator nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/compensator_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne64_compensator"/>
    <arg name="child_frame_id" value="velodyne64"/>
    <arg name="topic_pointcloud" value="/sensor/velodyne64/PointCloud2"/>
    <arg name="topic_compensated_pointcloud" value="/sensor/velodyne64/compensator/PointCloud2"/>
  </include>
  
    <!--  HDL16 Left -->
    <!--  driver nodelets -->
  <include file="$(find velodyne_driver)/launch/driver_nodelet.launch">
    <arg name="model" value="VLP16"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="firing_data_port" value="2369"/>
    <arg name="positioning_data_port" value="8309"/>
    <arg name="node_name" value="sensor_velodyne16_left_packets"/>
    <arg name="topic" value="/sensor/velodyne16/left/VelodyneScan"/>    
  </include>
  
  <!-- start cloud nodelet using test calibration file -->
  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
    <arg name="model" default="VLP16" />
    <arg name="calibration" default="$(arg velodyne16_calibration_file)" />
        <arg name="organized" default="$(arg organized)"/>
        <arg name="min_range" default="$(arg min_range)" />
        <arg name="max_range" default="$(arg max_range)" />
        <arg name="imu_sync" default="$(arg imu_sync)" />
    <arg name="topic_pointcloud" default="/sensor/velodyne16/left/PointCloud2"/>
    <arg name="topic_packets" default="/sensor/velodyne16/left/VelodyneScan"/>
    <arg name="node_name" value="sensor_velodyne16_left_points"/>
  </include>
  
   <!-- start compensator nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/compensator_nodelet.launch">
    <arg name="child_frame_id" value="velodyne16_left"/>
    <arg name="node_name" value="sensor_velodyne16_left_compensator"/>
    <arg name="topic_pointcloud" value="/sensor/velodyne16/left/PointCloud2"/>
    <arg name="topic_compensated_pointcloud" value="/sensor/velodyne16/left/compensator/PointCloud2"/>
  </include>
  
  <!--  HDL16 Right -->
    <!--  driver nodelets -->
  <include file="$(find velodyne_driver)/launch/driver_nodelet.launch">
    <arg name="model" value="VLP16"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="firing_data_port" value="2370"/>
    <arg name="positioning_data_port" value="8310"/>
    <arg name="node_name" value="sensor_velodyne16_right_packets"/>
    <arg name="topic" value="/sensor/velodyne16/right/VelodyneScan"/>    
  </include>
  
  <!-- start cloud nodelet using test calibration file -->
  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
    <arg name="model" default="VLP16" />
    <arg name="calibration" default="$(arg velodyne16_calibration_file)" />
        <arg name="organized" default="$(arg organized)"/>
        <arg name="min_range" default="$(arg min_range)" />
        <arg name="max_range" default="$(arg max_range)" />
        <arg name="imu_sync" default="$(arg imu_sync)" />
    <arg name="topic_pointcloud" default="/sensor/velodyne16/right/PointCloud2"/>
    <arg name="topic_packets" default="/sensor/velodyne16/right/VelodyneScan"/>
    <arg name="node_name" value="sensor_velodyne16_right_points"/>
  </include>
  
   <!-- start compensator nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/compensator_nodelet.launch">
    <arg name="child_frame_id" value="velodyne16_right"/>
    <arg name="node_name" value="sensor_velodyne16_right_compensator"/>
    <arg name="topic_pointcloud" value="/sensor/velodyne16/right/PointCloud2"/>
    <arg name="topic_compensated_pointcloud" value="/sensor/velodyne16/right/compensator/PointCloud2"/>
  </include>
  
  <!--  HDL16 Back -->
    <!--  driver nodelets -->
  <include file="$(find velodyne_driver)/launch/driver_nodelet.launch">
    <arg name="model" value="VLP16"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="firing_data_port" value="2371"/>
    <arg name="positioning_data_port" value="8311"/>
    <arg name="node_name" value="sensor_velodyne16_back_packets"/>
    <arg name="topic" value="/sensor/velodyne16/back/VelodyneScan"/>    
  </include>
  
  <!-- start cloud nodelet using test calibration file -->
  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
    <arg name="model" default="VLP16" />
    <arg name="calibration" default="$(arg velodyne16_calibration_file)" />
        <arg name="organized" default="$(arg organized)"/>
        <arg name="min_range" default="$(arg min_range)" />
        <arg name="max_range" default="$(arg max_range)" />
        <arg name="imu_sync" default="$(arg imu_sync)" />
    <arg name="topic_pointcloud" default="/sensor/velodyne16/back/PointCloud2"/>
    <arg name="topic_packets" default="/sensor/velodyne16/back/VelodyneScan"/>
    <arg name="node_name" value="sensor_velodyne16_back_points"/>
  </include>
  
   <!-- start compensator nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/compensator_nodelet.launch">
    <arg name="child_frame_id" value="velodyne16_back"/>
    <arg name="node_name" value="sensor_velodyne16_back_compensator"/>
    <arg name="topic_pointcloud" value="/sensor/velodyne16/back/PointCloud2"/>
    <arg name="topic_compensated_pointcloud" value="/sensor/velodyne16/back/compensator/PointCloud2"/>
  </include>
  
  <include file="$(find velodyne_pointcloud)/launch/fusion_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne_fusion"/>
    <arg name="topic_pointclouds" value="/sensor/velodyne64/compensator/PointCloud2,/sensor/velodyne16/back/compensator/PointCloud2,/sensor/velodyne16/left/compensator/PointCloud2,/sensor/velodyne16/right/compensator/PointCloud2"/>
    <arg name="topic_fused_pointcloud" value="/sensor/velodyne/fusion/PointCloud2"/>
  </include>
  
  <include file="$(find velodyne_pointcloud)/launch/filter_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne_fusion_downsample"/>
    <arg name="topic_fused_pointcloud" value="/sensor/velodyne/fusion/PointCloud2"/>
    <arg name="topic_downsample_pointcloud" value="/sensor/velodyne/fusion/downsample/PointCloud2"/>
  </include>

</launch>
