<launch>
    <include file="$(find velodyne_pointcloud)/launch/nodelet_manager.launch"/>
    <!-- start cloud nodelet using test calibration file -->
    <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
        <arg name="model" default="64E_S2" />
        <arg name="calibration" default="$(find velodyne_pointcloud)/params/64E_S2_calibration.yaml" />
        <arg name="organized" default="false"/>
        <arg name="min_range" default="5.0" />
        <arg name="max_range" default="70.0" />
        <arg name="imu_sync" default="xsens" />
    </include>

    <include file="$(find velodyne_pointcloud)/launch/rosbag_replay.launch">
        <arg name="rate" default="1" />
        <arg name="start" default="0" />
        <arg name="bag" default="/home/work/bag_files/20151129-145256.bag"/>
    </include>
    
      <param name="use_sim_time" value="true" />
  <param name="proj4_text"
         value="+proj=utm +zone=50 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs " />
  <param name="srid" value="23870" />
  
  <arg name="extrinsics" default="$(find velodyne_pointcloud)/params/velodyne_novatel_extrinsics_bmw8.yaml"/>
  <node pkg="novatel_preprocess" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics)" name="static_transform_velodyne" />

 <node pkg="novatel_preprocess" type="novatel_odometry_republisher" name="novatel_odometry_republisher_node" output="screen">
    <param name="topic_inspva" value="/dusensor/novatel/inspva"/>
    <param name="topic_odometry" value="/dusensor/novatel/Odometry"/>
  </node>

  <node pkg="novatel_preprocess" type="inspva_broadcaster" name="inspva_broadcaster_node" output="screen">
    <param name="topic_odometry" value="/dusensor/novatel/Odometry"/>
        <remap from="/pose_with_covariance_stamped_odometry" to="/novatel_driver/inspva_pose_with_covariance_stamped_odometry"/>
  </node>
    
    <include file="$(find velodyne_pointcloud)/launch/scan_msg_transform_nodelet.launch">
        <arg name="model" default="64E_S2" />
    </include>
    
  <!-- start compensator nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/compensator_nodelet.launch">
  </include>

    <arg name="pcd_folder" default="/home/work/pcd_files"/>
    <include file="$(find velodyne_pointcloud)/launch/pcd_exporter_nodelet.launch">
        <arg name="pcd_folder" default="$(arg pcd_folder)"/>
        <arg name="skip_static_frames" default="false"/>
        <arg name="child_frame_id" value="velodyne"/>
        <arg name="stamp_file" default="$(arg pcd_folder)/stamp.txt"/>
        <arg name="pose_file" default="$(arg pcd_folder)/pose.txt"/>
        <arg name="queue_size" default="10"/>
        <arg name="topic_pointcloud" default="/dusensor/velodyne/compensated_points"/>
    </include>

</launch>
