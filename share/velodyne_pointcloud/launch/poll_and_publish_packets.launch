<launch>
 
  <!-- declare arguments with default values -->
  <arg name="pcap" default="" />
<!--
  <arg name="model" default="VLP16" />
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16_calibration.yaml"/>
-->
<!--
  <arg name="model" default="32E" />
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/32E_calibration.yaml"/>
-->
  <arg name="model" default="64E_S2" />
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/64e_S2_calibration.yaml" />

  <!-- start nodelet manager and load driver nodelet -->
  <node pkg="nodelet" type="nodelet" name="velodyne_nodelet_manager"
        args="manager" output="screen"/>

  <arg name="read_once" default="false" />
  <arg name="read_fast" default="false" />
  <arg name="repeat_delay" default="0.0" />
  <arg name="rpm" default="600.0" />
  <arg name="frame_id" default="velodyne" />
  <arg name="cut_angle" default="-0.01" />
  <!-- cut_angle is for velodyne_driver to decide when to cut packets into messages, when set under 0, it will cut packets using a fix number -->
 
  <node pkg="nodelet" type="nodelet" name="driver_nodelet"
        args="load velodyne_driver/DriverNodelet velodyne_nodelet_manager"
        output="screen">
    <param name="model" value="$(arg model)"/>
    <param name="pcap" value="$(arg pcap)"/>
    <param name="read_once" value="$(arg read_once)"/>
    <param name="read_fast" value="$(arg read_fast)"/>
    <param name="repeat_delay" value="$(arg repeat_delay)"/>
    <param name="rpm" value="$(arg rpm)"/>
    <param name="frame_id" value="$(arg frame_id)"/>
    <param name="cut_angle" value="$(arg cut_angle)"/>
   <remap from="/velodyne_packets" to="/dusensor/velodyne/packets"/>
  </node>    

</launch>
